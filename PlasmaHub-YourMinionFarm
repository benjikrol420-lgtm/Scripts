local r=loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local w=r:CreateWindow({
    Name="Plazma Hub",Icon=0,
    LoadingTitle="Plazma Hub",
    LoadingSubtitle="by Plasma",
    ShowText="Rayfield",
    Theme="Amethyst",
    ToggleUIKeybind="K",
    DisableRayfieldPrompts=false,
    DisableBuildWarnings=false
})
local t=w:CreateTab("Main",4483362458)

local a=false
local c=nil

local function u()
    local s,v=pcall(function()
        return game.Players.LocalPlayer:WaitForChild("OreExtractorID",1).Value
    end)
    if s then c=v else c=1 end
end

t:CreateToggle({
    Name="Auto Click Ore Extractor (Leave and Rejoin until it works.)",
    CurrentValue=false,
    Flag="AutoClickToggle",
    Callback=function(v)
        a=v
        if a then
            task.spawn(function()
                while a do
                    local args={1}
                    game:GetService("ReplicatedStorage"):WaitForChild("Izc"):WaitForChild("Events"):WaitForChild("RE"):WaitForChild("oreExtractorClick"):FireServer(unpack(args))
                    task.wait(0.1)
                end
            end)
        end
    end,
})

local b=false
local f=nil

t:CreateToggle({
    Name="Auto Upgrade Ore Extractor",
    CurrentValue=false,
    Flag="AutoUpgradeOreToggle",
    Callback=function(v)
        b=v
        if b and not f then
            f=task.spawn(function()
                while b do
                    local s,e=pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Izc"):WaitForChild("Events"):WaitForChild("RE"):WaitForChild("upgrade"):FireServer("oreExtractor")
                    end)
                    if not s then warn("[AutoUpgradeOre] Error:",e) end
                    task.wait(1)
                end
                f=nil
            end)
        end
    end,
})

t:CreateDivider("Minion Upgrades")

local g=false
local h=nil

t:CreateToggle({
    Name="Auto Upgrade Minion Fortune",
    CurrentValue=false,
    Flag="AutoUpgradeMinionToggle",
    Callback=function(v)
        g=v
        if g and not h then
            h=task.spawn(function()
                while g do
                    local s,e=pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Izc"):WaitForChild("Events"):WaitForChild("RE"):WaitForChild("upgrade"):FireServer("minionsMultiplier")
                    end)
                    if not s then warn("[AutoUpgradeMinion] Error:",e) end
                    task.wait(1)
                end
                h=nil
            end)
        end
    end,
})

local rs=game:GetService("ReplicatedStorage")
local up=rs:WaitForChild("Izc"):WaitForChild("Events"):WaitForChild("RE"):WaitForChild("upgrade")

local d=false
local p=nil

t:CreateToggle({
    Name="Auto Upgrade Minion Limit",
    Flag="AutoUpgradeMinionLimit",
    Callback=function(s)
        d=s
        if d then
            print("[AutoUpgrade] Started upgrading minion limit")
            p=task.spawn(function()
                while d do
                    local ok,er=pcall(function()
                        up:FireServer("minionsMax")
                    end)
                    if not ok then warn("[AutoUpgrade] Error upgrading:",er) end
                    task.wait(1)
                end
                print("[AutoUpgrade] Stopped upgrading minion limit")
            end)
        else
            print("[AutoUpgrade] Toggle turned off, stopping upgrade")
        end
    end,
})

local j=false

t:CreateToggle({
    Name="Auto Upgrade Minion Haste",
    Flag="AutoUpgradeMinionHaste",
    Callback=function(s)
        j=s
        if j then
            print("[AutoUpgrade] Started upgrading minion haste")
            task.spawn(function()
                while j do
                    local ok,er=pcall(function()
                        up:FireServer("minionsTime")
                    end)
                    if not ok then warn("[AutoUpgrade] Error:",er) end
                    task.wait(1)
                end
                print("[AutoUpgrade] Stopped upgrading minion haste")
            end)
        else
            print("[AutoUpgrade] Toggle turned off")
        end
    end,
})

local tp=w:CreateTab("Teleports",4483362458)

local function makeTPBtn(name,x,y,z,lookAt)
    local cf=CFrame.new(x,y,z,unpack(lookAt))
    tp:CreateButton({
        Name=name,
        Callback=function()
            local pl=game.Players.LocalPlayer
            if pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                pl.Character.HumanoidRootPart.CFrame=cf
            end
        end
    })
end

makeTPBtn("Teleport to Ore Shop",-31.3058033,2.69999909,-66.6991425,{
    0.0523356013,-2.94071945e-09,0.99862957,
    1.90132017e-08,1,1.94832217e-09,
    -0.99862957,1.88851796e-08,0.0523356013
})

makeTPBtn("Teleport to Minion Shop",-31.2493916,2.69999909,-82.3654175,{
    0.0148223359,-1.28084039e-07,0.999890149,
    -1.69303984e-08,1,1.283491e-07,
    -0.999890149,-1.88309723e-08,0.0148223359
})

makeTPBtn("Teleport to Leaderboards",230.116302,2.69999909,-75.8902664,{
    -0.00973738823,-2.36319622e-08,-0.999952614,
    -4.74597783e-09,1,-2.35868676e-08,
    0.999952614,4.51607862e-09,-0.00973738823
})
